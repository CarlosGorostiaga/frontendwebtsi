---
// Header.astro - Navegación principal minimalista para TSI Grupo
import logoImg from '../assets/images/logo-no-fondo.png';

export interface Props {
  currentPath?: string;
}

const { currentPath = "/" } = Astro.props;

// Tipos para TypeScript
interface NavItem {
  name: string;
  href: string;
  path: string;
}

// Elementos de navegación
const navItems: NavItem[] = [
  { name: "Inicio", href: "/", path: "/" },
  { name: "Nosotros", href: "/nosotros", path: "/nosotros" },
  { name: "Servicios", href: "/servicios", path: "/servicios" },
  { name: "Proyectos", href: "/proyectos", path: "/proyectos" },
  { name: "Contacto", href: "/contacto", path: "/contacto" }
];
---

<header class="bg-white/95 backdrop-blur-lg border-b border-gray-200/60 sticky top-0 z-50 transition-all duration-300 header-glass">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-20">
      <!-- Logo simple -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-white rounded-lg shadow-sm flex items-center justify-center p-1">
            <img 
              src={logoImg.src} 
              alt="TSI Grupo" 
              class="h-8 w-8 object-contain"
            />
          </div>
          <div class="hidden sm:block">
            <span class="text-lg font-semibold text-gray-900">TSI Grupo</span>
            <span class="block text-xs text-gray-500">Imagen Corporativa</span>
          </div>
        </a>
      </div>

      <!-- Navegación principal -->
      <nav class="hidden lg:flex items-center space-x-8">
        {navItems.map((item) => {
          const isActive = currentPath === item.path;
          return (
            <a 
              href={item.href}
              class={`text-sm font-medium transition-colors duration-200 ${
                isActive 
                  ? "text-orange-500" 
                  : "text-gray-600 hover:text-gray-900"
              }`}
            >
              {item.name}
            </a>
          );
        })}
      </nav>

      <!-- CTA y contacto -->
      <div class="flex items-center space-x-4">
        <!-- Teléfono elegante -->
        <div class="hidden xl:flex items-center space-x-2 text-gray-600">
          <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
            <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
          </div>
          <a href="tel:+34918874170" class="text-sm font-medium hover:text-gray-900 transition-colors">
            +34 91 887 41 70
          </a>
        </div>

        <!-- Botón CTA simple -->
        <a 
          href="/contacto" 
          class="bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
        >
          Contacto
        </a>
      </div>

      <!-- Botón menú móvil elegante -->
      <button 
        id="mobile-menu-button"
        class="lg:hidden relative w-10 h-10 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-center transition-all duration-300 mobile-menu-btn"
        aria-expanded="false"
        aria-label="Abrir menú de navegación"
      >
        <div class="hamburger">
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
        </div>
      </button>
    </div>
  </div>

  <!-- Menú móvil elegante -->
  <div id="mobile-menu" class="lg:hidden hidden bg-white/98 backdrop-blur-lg border-t border-gray-200/60 mobile-menu">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 py-6">
      <nav class="space-y-2">
        {navItems.map((item) => {
          const isActive = currentPath === item.path;
          return (
            <a 
              href={item.href}
              class={`block px-4 py-3 rounded-xl text-base font-medium transition-all duration-300 ${
                isActive
                  ? "bg-gradient-to-r from-orange-500 to-orange-600 text-white shadow-lg"
                  : "text-gray-700 hover:bg-gray-50 hover:text-gray-900"
              }`}
            >
              <div class="flex items-center space-x-3">
                <div class={`w-2 h-2 rounded-full ${isActive ? 'bg-white/80' : 'bg-gray-300'}`}></div>
                <span>{item.name}</span>
              </div>
            </a>
          );
        })}
      </nav>
      
      <!-- Contacto móvil -->
      <div class="mt-6 pt-6 border-t border-gray-200/60 space-y-4">
        <div class="flex items-center justify-center space-x-2 text-gray-600">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
          </svg>
          <a href="tel:+34918874170" class="text-sm font-medium">+34 91 887 41 70</a>
        </div>
        
        <a 
          href="/contacto" 
          class="block w-full bg-gradient-to-r from-orange-500 to-orange-600 text-white text-center py-4 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300"
        >
          Hablemos de tu proyecto
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const hamburger = mobileMenuButton?.querySelector('.hamburger');

    if (mobileMenuButton && mobileMenu && hamburger) {
      // Función para alternar el menú
      const toggleMenu = () => {
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        const newState = !isExpanded;
        
        mobileMenuButton.setAttribute('aria-expanded', newState.toString());
        hamburger.classList.toggle('active', newState);
        
        if (newState) {
          mobileMenu.classList.remove('hidden');
          // Animación de entrada
          setTimeout(() => mobileMenu.classList.add('show'), 10);
        } else {
          mobileMenu.classList.remove('show');
          setTimeout(() => mobileMenu.classList.add('hidden'), 300);
        }
      };

      // Event listeners
      mobileMenuButton.addEventListener('click', toggleMenu);

      // Cerrar menú al hacer clic en enlaces
      const mobileMenuLinks = mobileMenu.querySelectorAll('a');
      mobileMenuLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.remove('show');
          hamburger.classList.remove('active');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          setTimeout(() => mobileMenu.classList.add('hidden'), 300);
        });
      });

      // Cerrar menú con Escape
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && mobileMenuButton.getAttribute('aria-expanded') === 'true') {
          toggleMenu();
        }
      });
    }

    // Efecto scroll en header
    let lastScrollY = window.scrollY;
    const header = document.querySelector('header');
    
    const handleScroll = () => {
      const currentScrollY = window.scrollY;
      
      if (header) {
        if (currentScrollY > 100) {
          header.classList.add('scrolled');
        } else {
          header.classList.remove('scrolled');
        }
        
        // Auto-hide en scroll down (opcional)
        if (currentScrollY > lastScrollY && currentScrollY > 200) {
          header.classList.add('header-hidden');
        } else {
          header.classList.remove('header-hidden');
        }
      }
      
      lastScrollY = currentScrollY;
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
  });
</script>

<style>
  /* Efectos glass y transparencia */
  .header-glass {
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
  }

  .header-glass.scrolled {
    background-color: rgba(255, 255, 255, 0.98);
    border-bottom-color: rgba(229, 231, 235, 0.8);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .header-hidden {
    transform: translateY(-100%);
  }

  /* Navegación activa */
  .nav-active-bg {
    background: linear-gradient(135deg, #f66500 0%, #ff8533 100%);
    box-shadow: 0 4px 15px rgba(246, 101, 0, 0.3);
  }

  .nav-item {
    position: relative;
    overflow: hidden;
  }

  .nav-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(246, 101, 0, 0.1), transparent);
    transition: left 0.5s ease;
  }

  .nav-item:hover::before {
    left: 100%;
  }

  /* Botón CTA */
  .cta-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s ease;
  }

  .cta-button:hover::before {
    left: 100%;
  }

  /* Hamburger animado */
  .hamburger {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 18px;
    height: 14px;
  }

  .hamburger-line {
    width: 100%;
    height: 2px;
    background-color: #6b7280;
    border-radius: 1px;
    transition: all 0.3s ease;
    transform-origin: center;
  }

  .hamburger-line:nth-child(1) {
    margin-bottom: 3px;
  }

  .hamburger-line:nth-child(2) {
    margin-bottom: 3px;
  }

  .hamburger.active .hamburger-line:nth-child(1) {
    transform: translateY(5px) rotate(45deg);
  }

  .hamburger.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .hamburger.active .hamburger-line:nth-child(3) {
    transform: translateY(-5px) rotate(-45deg);
  }

  /* Menú móvil animado */
  .mobile-menu {
    transform: translateY(-10px);
    opacity: 0;
    transition: all 0.3s ease;
  }

  .mobile-menu.show {
    transform: translateY(0);
    opacity: 1;
  }

  /* Responsive refinado */
  @media (max-width: 1024px) {
    .nav-item {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
  }

  @media (max-width: 640px) {
    .header-glass .h-20 {
      height: 4rem;
    }
    
    .mobile-menu .py-6 {
      padding-top: 1rem;
      padding-bottom: 1rem;
    }
  }

  /* Accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    .nav-item::before,
    .cta-button::before {
      display: none;
    }
    
    .hamburger-line,
    .mobile-menu {
      transition: none;
    }
  }

  /* Mejoras de contraste */
  @media (prefers-contrast: high) {
    .header-glass {
      background-color: white;
      border-bottom-color: #d1d5db;
    }
    
    .nav-active-bg {
      background: #f66500;
    }
    
    .hamburger-line {
      background-color: #374151;
    }
  }

  /* Focus states mejorados */
  .nav-item:focus-visible,
  .cta-button:focus-visible,
  .mobile-menu-btn:focus-visible {
    outline: 2px solid #f66500;
    outline-offset: 2px;
  }
</style>